Comm:nts in JavaScript are essential for code readability, maintainability, and collaboration among
developersG They serve several important purposes

1. Comments provide explanations and context about the code's purpose, logic, and
functionalityG This makes it easier for oth:r developers (or your future self) to understand and work with the
code.
2. Comments can be used to temporarily disable or "comment out" code during debugging,
helping you isolate issues without deleting code.
3. Comments allow developers to communicate with each other, explaining why certain
d:cisions were made or describing how specific code segments work.
4. Comments can be used to divide code into logical sections, making it easier to navigate and
maintain larger codebases.
5. In some cases, comments may be required to explain licensing, copyright
information, or compliance with regulations.

Single-line Comment:
Use double slashes (//) to create single-line comments. Anything after // on the same line is considered a
comment and is not executed by the JavaScript interpreter.

// This is a single-line comment
let age = 30; // This comment explains the variable's purpose

Multi-line Comment:
Use /* to begin a multi-line comment and */ to end it. Everything between these symbols is treated as a
comment, allowing you to write comments spanning multiple lines.

/*
This is a multi-line comment.
It can provide detailed explanations for code blocks.
*/
function calculateArea(width, height) {
return width * height;
}